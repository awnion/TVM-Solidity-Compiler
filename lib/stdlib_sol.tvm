.fragment __exp, {
	.loc stdlib.sol, 83
	PUSHINT 1
	.loc stdlib.sol, 84
	PUSHCONT {
		OVER
		NEQINT 0
	}
	PUSHCONT {
		.loc stdlib.sol, 85
		OVER
		MODPOW2 1
		PUSHCONT {
			.loc stdlib.sol, 86
			PUSH S2
			MUL
			.loc stdlib.sol, 87
			OVER
			DEC
		}
		PUSHCONT {
			.loc stdlib.sol, 89
			PUSH2 S2, S2
			MUL
			POP S3
			.loc stdlib.sol, 90
			OVER
			RSHIFT 1
		}
		IFELSE
		POP S2
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 93
	BLKDROP2 2, 1
	.loc stdlib.sol, 0
}

.fragment __gasGasPrice, {
	.loc stdlib.sol, 75
	DUP
	EQINT 0
	OVER
	EQINT -1
	OR
	THROWIFNOT 67
	.loc stdlib.sol, 76
	PUSHINT 20
	PUSHINT 21
	CONDSEL
	CONFIGOPTPARAM
	.loc stdlib.sol, 77
	DUP
	ISNULL
	THROWIF 68
	.loc stdlib.sol, 78
	DUP
	ISNULL
	THROWIF 63
	CTOS
	.loc stdlib.sol, 79
	LDU 8
	LDU 64
	LDU 64
	LDU 8
	PLDU 64
	BLKDROP2 4, 1
	.loc stdlib.sol, 0
}

.fragment __gasToTon, {
	.loc stdlib.sol, 71
	CALLREF {
		.inline __gasGasPrice
	}
	PUSHPOW2 16
	MULDIVC
	.loc stdlib.sol, 0
}

.fragment __strstr, {
	.loc stdlib.sol, 516
	NULL
	.loc stdlib.sol, 517
	PUSH S2
	CTOS
	.loc stdlib.sol, 518
	PUSH S2
	CTOS
	.loc stdlib.sol, 519
	DUP
	PUSHPOW2DEC 32
	SDATASIZE
	DROP
	NIP
	.loc stdlib.sol, 520
	PUSH S2
	PUSHPOW2DEC 32
	SDATASIZE
	DROP
	NIP
	.loc stdlib.sol, 521
	DUP2
	GREATER
	PUSHCONT {
		.loc stdlib.sol, 522
		ROLL 4
		BLKDROP2 6, 1
		.loc stdlib.sol, 0
	}
	IFJMP
	.loc stdlib.sol, 524
	OVER
	RSHIFT 3
	POP S2
	.loc stdlib.sol, 525
	RSHIFT 3
	.loc stdlib.sol, 526
	PUSH2 S0, S2
	.loc stdlib.sol, 527
	LDU 8
	POP S5
	.loc stdlib.sol, 528
	FALSE ; decl return flag
	PUSHCONT {
		PUSH2 S3, S4
		GEQ
	}
	PUSHCONT {
		.loc stdlib.sol, 529
		PUSH S6
		LDU 8
		POP S8
		.loc stdlib.sol, 530
		PUSH S7
		SBITREFS
		.loc stdlib.sol, 531
		OVER
		LESSINT 8
		OVER
		GTINT 0
		AND
		PUSHCONT {
			.loc stdlib.sol, 532
			PUSH S9
			LDREFRTOS
			NIP
			POP S10
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 534
		PUSH2 S2, S4
		EQUAL
		PUSHCONT {
			.loc stdlib.sol, 535
			BLKPUSH 2, 9
			PUSHCONT {
				.loc stdlib.sol, 493
				OVER
				SBITS
				.loc stdlib.sol, 494
				OVER
				SBITS
				.loc stdlib.sol, 495
				FALSE ; decl return flag
				PUSHCONT {
					PUSH S2
					NEQINT 0
					PUSH S2
					NEQINT 0
					AND
				}
				PUSHCONT {
					.loc stdlib.sol, 496
					BLKPUSH 2, 2
					MIN
					.loc stdlib.sol, 497
					PUSH2 S5, S0
					LDSLICEX
					POP S7
					.loc stdlib.sol, 498
					PUSH2 S5, S1
					LDSLICEX
					POP S7
					.loc stdlib.sol, 499
					PUSH2 S5, S2
					SUB
					POP S6
					.loc stdlib.sol, 500
					ROT
					PUSH S4
					SUBR
					POP S4
					.loc stdlib.sol, 501
					SDEQ
					PUSHCONT {
						.loc stdlib.sol, 502
						BLKDROP 5
						FALSE
						PUSHINT 4
						RETALT
						.loc stdlib.sol, 0
					}
					IFNOTJMP
					.loc stdlib.sol, 504
					PUSH S2
					EQINT 0
					PUSH S5
					SREFS
					NEQINT 0
					AND
					PUSHCONT {
						.loc stdlib.sol, 505
						PUSH S4
						LDREFRTOS
						NIP
						POP S5
						.loc stdlib.sol, 506
						PUSH S4
						SBITS
						POP S3
						.loc stdlib.sol, 0
					}
					IF
					.loc stdlib.sol, 508
					OVER
					EQINT 0
					PUSH S4
					SREFS
					NEQINT 0
					AND
					PUSHCONT {
						.loc stdlib.sol, 509
						PUSH S3
						LDREFRTOS
						NIP
						POP S4
						.loc stdlib.sol, 510
						PUSH S3
						SBITS
						POP S2
						.loc stdlib.sol, 0
					}
					IF
					.loc stdlib.sol, 0
				}
				WHILEBRK
				IFRET
				.loc stdlib.sol, 513
				BLKDROP 4
				TRUE
				.loc stdlib.sol, 492
			}
			CALLX
			.loc stdlib.sol, 0
			PUSHCONT {
				.loc stdlib.sol, 536
				BLKSWAP 2, 5
				SUBR
				MODPOW2 32
				POP S9
				.loc stdlib.sol, 537
				ROLL 8
				BLKDROP2 10, 1
				PUSHINT 4
				RETALT
				.loc stdlib.sol, 0
			}
			IFJMP
		}
		IF
		.loc stdlib.sol, 540
		BLKDROP 3
		PUSH S3
		DEC
		POP S4
		.loc stdlib.sol, 0
	}
	WHILEBRK
	IFRET
	.loc stdlib.sol, 542
	BLKDROP 6
	BLKDROP2 2, 1
	.loc stdlib.sol, 0
}

.fragment assembleList, {
	.loc stdlib.sol, 302
	PUSHCONT {
		OVER
		TLEN
		ISZERO
		NOT
	}
	PUSHCONT {
		.loc stdlib.sol, 303
		OVER
		CALLREF {
			TPOP
			TPOP
			ROTREV
			DUP
			TLEN
			PUSHCONT {
				TPUSH
			}
			PUSHCONT {
				DROP
			}
			IFELSE
		}
		POP S3
		.loc stdlib.sol, 304
		STBREF
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 307
	ENDC
	NIP
	.loc stdlib.sol, 0
}

.fragment __subCell, {
	.loc stdlib.sol, 406
	PUSHREF {
	}
	.loc stdlib.sol, 407
	OVER
	PUSHCONT {
		.loc stdlib.sol, 408
		BLKDROP2 3, 1
		.loc stdlib.sol, 0
	}
	IFNOTJMP
	.loc stdlib.sol, 410
	DROP
	SWAP
	PUSHINT 127
	DIVMOD
	.loc stdlib.sol, 411
	ROLL 3
	CTOS
	.loc stdlib.sol, 412
	ROT
	PUSHCONT {
		.loc stdlib.sol, 413
		LDREFRTOS
		NIP
		.loc stdlib.sol, 0
	}
	REPEAT
	.loc stdlib.sol, 415
	SWAP
	MULCONST 8
	SDSKIPFIRST
	.loc stdlib.sol, 416
	TUPLE 0
	.loc stdlib.sol, 417
	NEWC
	.loc stdlib.sol, 418
	PUSHCONT {
		PUSH S3
		NEQINT 0
	}
	PUSHCONT {
		.loc stdlib.sol, 419
		OVER2
		SBITS
		RSHIFT 3
		PUSH S2
		BREMBITS
		RSHIFT 3
		MIN
		MIN
		.loc stdlib.sol, 420
		PUSH3 S1, S3, S0
		LSHIFT 3
		MODPOW2 10
		LDSLICEX
		POP S6
		STSLICER
		POP S2
		.loc stdlib.sol, 421
		PUSH S4
		SUBR
		POP S4
		.loc stdlib.sol, 422
		PUSH S3
		PUSHCONT {
			.loc stdlib.sol, 423
			PUSH S2
			SBITS
			PUSHCONT {
				.loc stdlib.sol, 424
				PUSH S2
				LDREFRTOS
				NIP
				POP S3
				.loc stdlib.sol, 0
			}
			IFNOT
			.loc stdlib.sol, 426
			DUP
			BREMBITS
			LESSINT 8
			PUSHCONT {
				.loc stdlib.sol, 427
				CALLREF {
					XCPU S1, S0
					TLEN
					PUSHCONT {
						TPOP
						DUP
						TLEN
						PUSHPOW2DEC 8
						SUB
						PUSHCONT {
							TPUSH
							TUPLE 0
						}
						IFNOT
					}
					PUSHCONT {
						TUPLE 0
					}
					IFELSE
					ROT
					TPUSH
					TPUSH
				}
				.loc stdlib.sol, 428
				NEWC
				.loc stdlib.sol, 0
			}
			IF
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 432
	CALLREF {
		.inline assembleList
	}
	BLKDROP2 2, 1
	.loc stdlib.sol, 0
}

.fragment __substr_from, {
	.loc stdlib.sol, 392
	OVER
	PUSHPOW2DEC 32
	CDATASIZE
	DROP
	NIP
	.loc stdlib.sol, 393
	RSHIFT 3
	.loc stdlib.sol, 394
	PUSH2 S0, S1
	GEQ
	THROWIFNOT 70
	.loc stdlib.sol, 395
	OVER
	SUB
	.loc stdlib.sol, 396
	CALLREF {
		.inline __subCell
	}
	.loc stdlib.sol, 0
}

.fragment __substr_from_count, {
	.loc stdlib.sol, 400
	PUSH S2
	PUSHPOW2DEC 32
	CDATASIZE
	DROP
	NIP
	.loc stdlib.sol, 401
	RSHIFT 3
	.loc stdlib.sol, 402
	BLKPUSH 2, 2
	ADD
	GEQ
	THROWIFNOT 70
	.loc stdlib.sol, 403
	CALLREF {
		.inline __subCell
	}
	.loc stdlib.sol, 0
}

.fragment __tonToGas, {
	.loc stdlib.sol, 67
	PUSHPOW2 16
	SWAP
	CALLREF {
		.inline __gasGasPrice
	}
	MULDIV
	.loc stdlib.sol, 0
}

.fragment bytes_substr, {
	.loc stdlib.sol, 381
	PUSH S3
	PUSHPOW2DEC 32
	CDATASIZE
	DROP
	NIP
	.loc stdlib.sol, 382
	RSHIFT 3
	.loc stdlib.sol, 383
	SWAP
	PUSHCONT {
		.loc stdlib.sol, 384
		DUP
		POP S2
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 385
	PUSH2 S1, S2
	GEQ
	THROWIFNOT 70
	.loc stdlib.sol, 386
	XCPU S1, S2
	SUB
	.loc stdlib.sol, 387
	SWAP
	BLKPUSH 2, 2
	ADD
	GEQ
	THROWIFNOT 70
	.loc stdlib.sol, 388
	CALLREF {
		.inline __subCell
	}
	.loc stdlib.sol, 0
}

.fragment storeStringInBuilders, {
	.loc stdlib.sol, 284
	OVER
	BREMBITS
	ADDCONST -7
	.loc stdlib.sol, 285
	OVER
	SBITREFS
	.loc stdlib.sol, 286
	DUP
	PUSHCONT {
		.loc stdlib.sol, 287
		PUSH S3
		PUSHINT 0
		PUSH S2
		SSKIPFIRST
		POP S4
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 288
	DROP
	OVER
	LEQ
	.loc stdlib.sol, 289
	PUSHCONT {
		.loc stdlib.sol, 292
		DUP2
		LDSLICEX
		POP S3
		.loc stdlib.sol, 293
		PUSH S3
		STSLICE
		POP S3
		.loc stdlib.sol, 294
		OVER2
		CALLREF {
			XCPU S1, S0
			TLEN
			PUSHCONT {
				TPOP
				DUP
				TLEN
				PUSHPOW2DEC 8
				SUB
				PUSHCONT {
					TPUSH
					TUPLE 0
				}
				IFNOT
			}
			PUSHCONT {
				TUPLE 0
			}
			IFELSE
			ROT
			TPUSH
			TPUSH
		}
		POP S4
		.loc stdlib.sol, 295
		NEWC
		POP S3
		.loc stdlib.sol, 296
	}
	IFNOT
	PUSH2 S1, S2
	STSLICE
	BLKDROP2 3, 1
	.loc stdlib.sol, 0
}

.fragment strToList, {
	.loc stdlib.sol, 366
	TUPLE 0
	.loc stdlib.sol, 367
	SWAP
	CTOS
	.loc stdlib.sol, 368
	PUSHCONT {
		DUP
		SREFS
		NEQINT 0
	}
	PUSHCONT {
		.loc stdlib.sol, 369
		LDREFRTOS
		.loc stdlib.sol, 371
		SWAP
		NEWC
		STSLICE
		.loc stdlib.sol, 372
		PUXC S2, S-1
		CALLREF {
			XCPU S1, S0
			TLEN
			PUSHCONT {
				TPOP
				DUP
				TLEN
				PUSHPOW2DEC 8
				SUB
				PUSHCONT {
					TPUSH
					TUPLE 0
				}
				IFNOT
			}
			PUSHCONT {
				TUPLE 0
			}
			IFELSE
			ROT
			TPUSH
			TPUSH
		}
		POP S2
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 376
	NEWC
	STSLICE
	.loc stdlib.sol, 0
}

.fragment concatenateStrings, {
	.loc stdlib.sol, 461
	SWAP
	CALLREF {
		.inline strToList
	}
	.loc stdlib.sol, 462
	ROT
	CTOS
	.loc stdlib.sol, 463
	BLKPUSH 3, 2
	CALLREF {
		.inline storeStringInBuilders
	}
	POP S3
	POP S3
	.loc stdlib.sol, 464
	PUSHCONT {
		DUP
		PUSHINT 1
		SCHKREFSQ
	}
	PUSHCONT {
		.loc stdlib.sol, 465
		LDREFRTOS
		NIP
		.loc stdlib.sol, 466
		BLKPUSH 3, 2
		CALLREF {
			.inline storeStringInBuilders
		}
		POP S3
		POP S3
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 468
	DROP
	CALLREF {
		.inline assembleList
	}
	.loc stdlib.sol, 0
}

.fragment parseInteger, {
	.loc stdlib.sol, 99
	TUPLE 0
	.loc stdlib.sol, 100
	PUSH S2
	PUSHCONT {
		.loc stdlib.sol, 101
		PUSHINT 0
		CALLREF {
			XCPU S1, S0
			TLEN
			PUSHCONT {
				TPOP
				DUP
				TLEN
				PUSHPOW2DEC 8
				SUB
				PUSHCONT {
					TPUSH
					TUPLE 0
				}
				IFNOT
			}
			PUSHCONT {
				TUPLE 0
			}
			IFELSE
			ROT
			TPUSH
			TPUSH
		}
		.loc stdlib.sol, 102
		BLKDROP2 2, 1
		.loc stdlib.sol, 0
	}
	IFNOTJMP
	.loc stdlib.sol, 104
	PUSHINT 0
	.loc stdlib.sol, 105
	PUSHCONT {
		PUSH S3
		NEQINT 0
	}
	PUSHCONT {
		.loc stdlib.sol, 106
		OVER2
		DIVMOD
		POP S2
		POP S4
		.loc stdlib.sol, 107
		DUP2
		CALLREF {
			XCPU S1, S0
			TLEN
			PUSHCONT {
				TPOP
				DUP
				TLEN
				PUSHPOW2DEC 8
				SUB
				PUSHCONT {
					TPUSH
					TUPLE 0
				}
				IFNOT
			}
			PUSHCONT {
				TUPLE 0
			}
			IFELSE
			ROT
			TPUSH
			TPUSH
		}
		POP S2
		.loc stdlib.sol, 0
	}
	WHILE
	DROP
	BLKDROP2 2, 1
	.loc stdlib.sol, 0
}

.fragment convertIntToHexStr, {
	.loc stdlib.sol, 210
	PUSH S5
	BREMBITS
	RSHIFT 3
	.loc stdlib.sol, 211
	DUP
	PUSHCONT {
		.loc stdlib.sol, 212
		BLKPUSH 2, 7
		CALLREF {
			XCPU S1, S0
			TLEN
			PUSHCONT {
				TPOP
				DUP
				TLEN
				PUSHPOW2DEC 8
				SUB
				PUSHCONT {
					TPUSH
					TUPLE 0
				}
				IFNOT
			}
			PUSHCONT {
				TUPLE 0
			}
			IFELSE
			ROT
			TPUSH
			TPUSH
		}
		POP S8
		.loc stdlib.sol, 213
		NEWC
		POP S7
		.loc stdlib.sol, 214
		DROP
		PUSHINT 127
		.loc stdlib.sol, 0
	}
	IFNOT
	.loc stdlib.sol, 216
	ROLL 3
	PUSHINT 48
	PUSHINT 32
	CONDSEL
	.loc stdlib.sol, 217
	ROT
	PUSHCONT {
		.loc stdlib.sol, 218
		PUSH S5
		STSLICECONST x2d
		POP S6
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 219
	OVER
	DEC
	POP S2
	.loc stdlib.sol, 220
	OVER
	PUSHCONT {
		.loc stdlib.sol, 221
		BLKPUSH 2, 6
		CALLREF {
			XCPU S1, S0
			TLEN
			PUSHCONT {
				TPOP
				DUP
				TLEN
				PUSHPOW2DEC 8
				SUB
				PUSHCONT {
					TPUSH
					TUPLE 0
				}
				IFNOT
			}
			PUSHCONT {
				TUPLE 0
			}
			IFELSE
			ROT
			TPUSH
			TPUSH
		}
		POP S7
		.loc stdlib.sol, 222
		NEWC
		POP S6
		.loc stdlib.sol, 223
		PUSHINT 127
		POP S2
		.loc stdlib.sol, 0
	}
	IFNOT
	.loc stdlib.sol, 225
	ROLL 4
	PUSHINT 16
	CALLREF {
		.inline parseInteger
	}
	.loc stdlib.sol, 226
	DUP
	CALLREF {
		DUP
		TLEN
		DUP
		PUSHCONT {
			DEC
			PUSHPOW2DEC 8
			MUL
			SWAP
			LAST
			TLEN
			ADD
		}
		PUSHCONT {
			NIP
		}
		IFELSE
	}
	.loc stdlib.sol, 228
	PUSH S5
	PUSHCONT {
		.loc stdlib.sol, 229
		PUSH2 S5, S0
		LESS
		PUSH S6
		GTINT 127
		OR
		THROWIF 69
		.loc stdlib.sol, 231
		PUSH2 S5, S0
		SUB
		.loc stdlib.sol, 232
		PUSH2 S0, S4
		LEQ
		PUSHCONT {
			.loc stdlib.sol, 233
			DUP
			PUSHCONT {
				.loc stdlib.sol, 234
				PUSH2 S7, S3
				STUR 8
				POP S8
				.loc stdlib.sol, 0
			}
			REPEAT
			.loc stdlib.sol, 236
			PUSH2 S4, S0
			SUB
			POP S5
			.loc stdlib.sol, 237
			PUSH S4
			PUSHCONT {
				.loc stdlib.sol, 238
				BLKPUSH 2, 8
				CALLREF {
					XCPU S1, S0
					TLEN
					PUSHCONT {
						TPOP
						DUP
						TLEN
						PUSHPOW2DEC 8
						SUB
						PUSHCONT {
							TPUSH
							TUPLE 0
						}
						IFNOT
					}
					PUSHCONT {
						TUPLE 0
					}
					IFELSE
					ROT
					TPUSH
					TPUSH
				}
				POP S9
				.loc stdlib.sol, 239
				NEWC
				POP S8
				.loc stdlib.sol, 240
				PUSHINT 127
				POP S5
				.loc stdlib.sol, 0
			}
			IFNOT
		}
		PUSHCONT {
			.loc stdlib.sol, 243
			PUSH S4
			PUSHCONT {
				.loc stdlib.sol, 244
				PUSH2 S7, S3
				STUR 8
				POP S8
				.loc stdlib.sol, 0
			}
			REPEAT
			.loc stdlib.sol, 246
			BLKPUSH 2, 8
			CALLREF {
				XCPU S1, S0
				TLEN
				PUSHCONT {
					TPOP
					DUP
					TLEN
					PUSHPOW2DEC 8
					SUB
					PUSHCONT {
						TPUSH
						TUPLE 0
					}
					IFNOT
				}
				PUSHCONT {
					TUPLE 0
				}
				IFELSE
				ROT
				TPUSH
				TPUSH
			}
			POP S9
			.loc stdlib.sol, 247
			NEWC
			POP S8
			.loc stdlib.sol, 248
			PUSH2 S0, S4
			SUB
			PUSHCONT {
				.loc stdlib.sol, 249
				PUSH2 S7, S3
				STUR 8
				POP S8
				.loc stdlib.sol, 0
			}
			REPEAT
			.loc stdlib.sol, 251
			PUSHINT 127
			OVER
			SUB
			PUSH S5
			ADD
			POP S5
		}
		IFELSE
		.loc stdlib.sol, 0
		DROP
	}
	IF
	.loc stdlib.sol, 254
	PUSH2 S0, S3
	LEQ
	PUSHCONT {
		.loc stdlib.sol, 255
		DUP
		PUSHCONT {
			.loc stdlib.sol, 256
			OVER
			CALLREF {
				TPOP
				TPOP
				ROTREV
				DUP
				TLEN
				PUSHCONT {
					TPUSH
				}
				PUSHCONT {
					DROP
				}
				IFELSE
			}
			POP S3
			.loc stdlib.sol, 257
			DUP
			LESSINT 10
			PUSHCONT {
				.loc stdlib.sol, 258
				PUSH S7
				PUSHINT 48
			}
			PUSHCONT {
				.loc stdlib.sol, 260
				PUSH2 S7, S5
				PUSHINT 87
				PUSHINT 55
				CONDSEL
			}
			IFELSE
			PUSH S2
			ADD
			STUR 8
			POP S8
			.loc stdlib.sol, 0
			DROP
		}
		REPEAT
	}
	PUSHCONT {
		.loc stdlib.sol, 263
		PUSH S3
		PUSHCONT {
			.loc stdlib.sol, 264
			OVER
			CALLREF {
				TPOP
				TPOP
				ROTREV
				DUP
				TLEN
				PUSHCONT {
					TPUSH
				}
				PUSHCONT {
					DROP
				}
				IFELSE
			}
			POP S3
			.loc stdlib.sol, 265
			DUP
			LESSINT 10
			PUSHCONT {
				.loc stdlib.sol, 266
				PUSH S7
				PUSHINT 48
			}
			PUSHCONT {
				.loc stdlib.sol, 268
				PUSH2 S7, S5
				PUSHINT 87
				PUSHINT 55
				CONDSEL
			}
			IFELSE
			PUSH S2
			ADD
			STUR 8
			POP S8
			.loc stdlib.sol, 0
			DROP
		}
		REPEAT
		.loc stdlib.sol, 270
		BLKPUSH 2, 7
		CALLREF {
			XCPU S1, S0
			TLEN
			PUSHCONT {
				TPOP
				DUP
				TLEN
				PUSHPOW2DEC 8
				SUB
				PUSHCONT {
					TPUSH
					TUPLE 0
				}
				IFNOT
			}
			PUSHCONT {
				TUPLE 0
			}
			IFELSE
			ROT
			TPUSH
			TPUSH
		}
		POP S8
		.loc stdlib.sol, 271
		NEWC
		POP S7
		.loc stdlib.sol, 272
		PUSH2 S0, S3
		SUB
		PUSHCONT {
			.loc stdlib.sol, 273
			OVER
			CALLREF {
				TPOP
				TPOP
				ROTREV
				DUP
				TLEN
				PUSHCONT {
					TPUSH
				}
				PUSHCONT {
					DROP
				}
				IFELSE
			}
			POP S3
			.loc stdlib.sol, 274
			DUP
			LESSINT 10
			PUSHCONT {
				.loc stdlib.sol, 275
				PUSH S7
				PUSHINT 48
			}
			PUSHCONT {
				.loc stdlib.sol, 277
				PUSH2 S7, S5
				PUSHINT 87
				PUSHINT 55
				CONDSEL
			}
			IFELSE
			PUSH S2
			ADD
			STUR 8
			POP S8
			.loc stdlib.sol, 0
			DROP
		}
		REPEAT
	}
	IFELSE
	.loc stdlib.sol, 280
	BLKDROP 6
	.loc stdlib.sol, 0
}

.fragment convertIntToHexStr_short, {
	.loc stdlib.sol, 206
	ROTREV
	PUSH S2
	ABS
	PUSHINT 0
	DUP
	TRUE
	ROLL 6
	LESSINT 0
	CALLREF {
		.inline convertIntToHexStr
	}
	.loc stdlib.sol, 0
}

.fragment convertAddressToHexString, {
	.loc stdlib.sol, 177
	REWRITESTDADDR
	.loc stdlib.sol, 178
	OVER2
	ROLL 3
	CALLREF {
		.inline convertIntToHexStr_short
	}
	POP S3
	POP S3
	.loc stdlib.sol, 179
	OVER
	BREMBITS
	.loc stdlib.sol, 180
	GTINT 8
	PUSHCONT {
		.loc stdlib.sol, 183
		BLKPUSH 2, 2
		CALLREF {
			XCPU S1, S0
			TLEN
			PUSHCONT {
				TPOP
				DUP
				TLEN
				PUSHPOW2DEC 8
				SUB
				PUSHCONT {
					TPUSH
					TUPLE 0
				}
				IFNOT
			}
			PUSHCONT {
				TUPLE 0
			}
			IFELSE
			ROT
			TPUSH
			TPUSH
		}
		POP S3
		.loc stdlib.sol, 184
		NEWC
		POP S2
		.loc stdlib.sol, 185
	}
	IFNOT
	OVER
	STSLICECONST x3a
	POP S2
	.loc stdlib.sol, 187
	PUSHINT 64
	TRUE
	DUP
	FALSE
	CALLREF {
		.inline convertIntToHexStr
	}
	.loc stdlib.sol, 0
}

.fragment convertIntToDecStr, {
	.loc stdlib.sol, 112
	PUSH S4
	BREMBITS
	RSHIFT 3
	.loc stdlib.sol, 113
	DUP
	PUSHCONT {
		.loc stdlib.sol, 114
		BLKPUSH 2, 6
		CALLREF {
			XCPU S1, S0
			TLEN
			PUSHCONT {
				TPOP
				DUP
				TLEN
				PUSHPOW2DEC 8
				SUB
				PUSHCONT {
					TPUSH
					TUPLE 0
				}
				IFNOT
			}
			PUSHCONT {
				TUPLE 0
			}
			IFELSE
			ROT
			TPUSH
			TPUSH
		}
		POP S7
		.loc stdlib.sol, 115
		NEWC
		POP S6
		.loc stdlib.sol, 116
		DROP
		PUSHINT 127
		.loc stdlib.sol, 0
	}
	IFNOT
	.loc stdlib.sol, 118
	ROT
	PUSHINT 48
	PUSHINT 32
	CONDSEL
	.loc stdlib.sol, 119
	ROT
	PUSHCONT {
		.loc stdlib.sol, 120
		PUSH S4
		STSLICECONST x2d
		POP S5
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 121
	OVER
	DEC
	POP S2
	.loc stdlib.sol, 122
	OVER
	PUSHCONT {
		.loc stdlib.sol, 123
		BLKPUSH 2, 5
		CALLREF {
			XCPU S1, S0
			TLEN
			PUSHCONT {
				TPOP
				DUP
				TLEN
				PUSHPOW2DEC 8
				SUB
				PUSHCONT {
					TPUSH
					TUPLE 0
				}
				IFNOT
			}
			PUSHCONT {
				TUPLE 0
			}
			IFELSE
			ROT
			TPUSH
			TPUSH
		}
		POP S6
		.loc stdlib.sol, 124
		NEWC
		POP S5
		.loc stdlib.sol, 125
		PUSHINT 127
		POP S2
		.loc stdlib.sol, 0
	}
	IFNOT
	.loc stdlib.sol, 127
	ROLL 3
	PUSHINT 10
	CALLREF {
		.inline parseInteger
	}
	.loc stdlib.sol, 128
	DUP
	CALLREF {
		DUP
		TLEN
		DUP
		PUSHCONT {
			DEC
			PUSHPOW2DEC 8
			MUL
			SWAP
			LAST
			TLEN
			ADD
		}
		PUSHCONT {
			NIP
		}
		IFELSE
	}
	.loc stdlib.sol, 129
	PUSH S4
	PUSHCONT {
		.loc stdlib.sol, 130
		PUSH2 S4, S0
		LESS
		PUSH S5
		GTINT 127
		OR
		THROWIF 66
		.loc stdlib.sol, 132
		PUSH2 S4, S0
		SUB
		.loc stdlib.sol, 133
		PUSH2 S0, S4
		LEQ
		PUSHCONT {
			.loc stdlib.sol, 134
			DUP
			PUSHCONT {
				.loc stdlib.sol, 135
				PUSH2 S6, S3
				STUR 8
				POP S7
				.loc stdlib.sol, 0
			}
			REPEAT
			.loc stdlib.sol, 137
			PUSH2 S4, S0
			SUB
			POP S5
			.loc stdlib.sol, 138
			PUSH S4
			PUSHCONT {
				.loc stdlib.sol, 139
				BLKPUSH 2, 7
				CALLREF {
					XCPU S1, S0
					TLEN
					PUSHCONT {
						TPOP
						DUP
						TLEN
						PUSHPOW2DEC 8
						SUB
						PUSHCONT {
							TPUSH
							TUPLE 0
						}
						IFNOT
					}
					PUSHCONT {
						TUPLE 0
					}
					IFELSE
					ROT
					TPUSH
					TPUSH
				}
				POP S8
				.loc stdlib.sol, 140
				NEWC
				POP S7
				.loc stdlib.sol, 141
				PUSHINT 127
				POP S5
				.loc stdlib.sol, 0
			}
			IFNOT
		}
		PUSHCONT {
			.loc stdlib.sol, 144
			PUSH S4
			PUSHCONT {
				.loc stdlib.sol, 145
				PUSH2 S6, S3
				STUR 8
				POP S7
				.loc stdlib.sol, 0
			}
			REPEAT
			.loc stdlib.sol, 147
			BLKPUSH 2, 7
			CALLREF {
				XCPU S1, S0
				TLEN
				PUSHCONT {
					TPOP
					DUP
					TLEN
					PUSHPOW2DEC 8
					SUB
					PUSHCONT {
						TPUSH
						TUPLE 0
					}
					IFNOT
				}
				PUSHCONT {
					TUPLE 0
				}
				IFELSE
				ROT
				TPUSH
				TPUSH
			}
			POP S8
			.loc stdlib.sol, 148
			NEWC
			POP S7
			.loc stdlib.sol, 149
			PUSH2 S0, S4
			SUB
			PUSHCONT {
				.loc stdlib.sol, 150
				PUSH2 S6, S3
				STUR 8
				POP S7
				.loc stdlib.sol, 0
			}
			REPEAT
			.loc stdlib.sol, 152
			PUSHINT 127
			OVER
			SUB
			PUSH S5
			ADD
			POP S5
		}
		IFELSE
		.loc stdlib.sol, 0
		DROP
	}
	IF
	.loc stdlib.sol, 155
	PUSH2 S0, S3
	LEQ
	PUSHCONT {
		.loc stdlib.sol, 156
		DUP
		PUSHCONT {
			.loc stdlib.sol, 157
			OVER
			CALLREF {
				TPOP
				TPOP
				ROTREV
				DUP
				TLEN
				PUSHCONT {
					TPUSH
				}
				PUSHCONT {
					DROP
				}
				IFELSE
			}
			POP S3
			.loc stdlib.sol, 158
			PUSH S6
			PUSHINT 48
			ROT
			ADD
			STUR 8
			POP S6
			.loc stdlib.sol, 0
		}
		REPEAT
	}
	PUSHCONT {
		.loc stdlib.sol, 161
		PUSH S3
		PUSHCONT {
			.loc stdlib.sol, 162
			OVER
			CALLREF {
				TPOP
				TPOP
				ROTREV
				DUP
				TLEN
				PUSHCONT {
					TPUSH
				}
				PUSHCONT {
					DROP
				}
				IFELSE
			}
			POP S3
			.loc stdlib.sol, 163
			PUSH S6
			PUSHINT 48
			ROT
			ADD
			STUR 8
			POP S6
			.loc stdlib.sol, 0
		}
		REPEAT
		.loc stdlib.sol, 165
		BLKPUSH 2, 6
		CALLREF {
			XCPU S1, S0
			TLEN
			PUSHCONT {
				TPOP
				DUP
				TLEN
				PUSHPOW2DEC 8
				SUB
				PUSHCONT {
					TPUSH
					TUPLE 0
				}
				IFNOT
			}
			PUSHCONT {
				TUPLE 0
			}
			IFELSE
			ROT
			TPUSH
			TPUSH
		}
		POP S7
		.loc stdlib.sol, 166
		NEWC
		POP S6
		.loc stdlib.sol, 167
		PUSH2 S0, S3
		SUB
		PUSHCONT {
			.loc stdlib.sol, 168
			OVER
			CALLREF {
				TPOP
				TPOP
				ROTREV
				DUP
				TLEN
				PUSHCONT {
					TPUSH
				}
				PUSHCONT {
					DROP
				}
				IFELSE
			}
			POP S3
			.loc stdlib.sol, 169
			PUSH S6
			PUSHINT 48
			ROT
			ADD
			STUR 8
			POP S6
			.loc stdlib.sol, 0
		}
		REPEAT
	}
	IFELSE
	.loc stdlib.sol, 173
	BLKDROP 5
	.loc stdlib.sol, 0
}

.fragment convertFixedPointToString, {
	.loc stdlib.sol, 191
	OVER
	ABS
	.loc stdlib.sol, 192
	PUSHINT 10
	PUSH3 S2, S0, S2
	OR
	THROWIFNOT 69
	CALLREF {
		.inline __exp
	}
	DIVMOD
	.loc stdlib.sol, 193
	BLKPUSH 2, 5
	ROLL 3
	PUSHINT 0
	DUP
	ROLL 7
	SGN
	LESSINT 0
	CALLREF {
		.inline convertIntToDecStr
	}
	POP S4
	POP S4
	.loc stdlib.sol, 194
	PUSH S2
	BREMBITS
	.loc stdlib.sol, 195
	GTINT 8
	PUSHCONT {
		.loc stdlib.sol, 198
		OVER2
		CALLREF {
			XCPU S1, S0
			TLEN
			PUSHCONT {
				TPOP
				DUP
				TLEN
				PUSHPOW2DEC 8
				SUB
				PUSHCONT {
					TPUSH
					TUPLE 0
				}
				IFNOT
			}
			PUSHCONT {
				TUPLE 0
			}
			IFELSE
			ROT
			TPUSH
			TPUSH
		}
		POP S4
		.loc stdlib.sol, 199
		NEWC
		POP S3
		.loc stdlib.sol, 200
	}
	IFNOT
	PUSH S2
	STSLICECONST x2e
	POP S3
	.loc stdlib.sol, 202
	SWAP
	TRUE
	FALSE
	CALLREF {
		.inline convertIntToDecStr
	}
	.loc stdlib.sol, 0
}

.fragment insert_pubkey, {
	.loc stdlib.sol, 14
	SWAP
	CTOS
	.loc stdlib.sol, 15
	NEWC
	.loc stdlib.sol, 18
	OVER
	LDI 1
	POP S3
	PUSHCONT {
		.loc stdlib.sol, 19
		STSLICECONST 1
		.loc stdlib.sol, 20
		OVER
		LDU 32
		POP S3
		.loc stdlib.sol, 21
		SWAP
		STSLICECONST 1
		STU 32
	}
	PUSHCONT {
		.loc stdlib.sol, 23
		STSLICECONST 0
	}
	IFELSE
	.loc stdlib.sol, 27
	OVER
	LDI 1
	POP S3
	PUSHCONT {
		.loc stdlib.sol, 28
		STSLICECONST 1
		.loc stdlib.sol, 29
		OVER
		LDI 1
		LDI 1
		POP S4
		.loc stdlib.sol, 30
		XCHG S2
		STI 1
		STI 1
	}
	PUSHCONT {
		.loc stdlib.sol, 32
		STSLICECONST 0
	}
	IFELSE
	.loc stdlib.sol, 36
	OVER
	LDDICT
	POP S3
	SWAP
	STDICT
	.loc stdlib.sol, 40
	NEWDICT
	.loc stdlib.sol, 41
	PUSH S2
	LDI 1
	POP S4
	PUSHCONT {
		.loc stdlib.sol, 42
		PUSH S2
		LDREFRTOS
		SWAP
		POP S4
		.loc stdlib.sol, 43
		PLDDICT
		NIP
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 45
	ROLL 3
	PUSHINT 0
	ROTREV
	NEWC
	STU 256
	ROTREV
	PUSHINT 64
	DICTUSETB
	.loc stdlib.sol, 47
	NEWC
	STDICT
	.loc stdlib.sol, 48
	OVER
	STSLICECONST 1
	POP S2
	.loc stdlib.sol, 49
	STBREFR
	.loc stdlib.sol, 53
	OVER
	LDDICT
	POP S3
	SWAP
	STDICT
	.loc stdlib.sol, 55
	SWAP
	SEMPTY
	THROWIFNOT 55
	.loc stdlib.sol, 57
	ENDC
	.loc stdlib.sol, 0
}

.fragment replay_protection, {
	.loc stdlib.sol, 61
	GETGLOB 3
	OVER
	LESS
	THROWIFNOT 52
	.loc stdlib.sol, 62
	DUP
	NOW
	PUSHINT 1000
	MUL
	PUSHINT 1800000
	ADD
	LESS
	THROWIFNOT 52
	.loc stdlib.sol, 63
	SETGLOB 3
	.loc stdlib.sol, 0
}

.fragment __stoi, {
	.loc stdlib.sol, 311
	CTOS
	.loc stdlib.sol, 312
	DUP
	SBITS
	LESSINT 8
	PUSHCONT {
		.loc stdlib.sol, 313
		DROP
		NULL
		.loc stdlib.sol, 0
	}
	IFJMP
	.loc stdlib.sol, 315
	BLKPUSH 2, 0
	.loc stdlib.sol, 316
	LDU 8
	POP S2
	.loc stdlib.sol, 317
	DUP
	EQINT 45
	.loc stdlib.sol, 318
	PUSHINT 0
	.loc stdlib.sol, 319
	PUSH S3
	SBITS
	.loc stdlib.sol, 320
	PUSH2 S2, S0
	GTINT 15
	AND
	PUSHCONT {
		.loc stdlib.sol, 321
		PUSH S4
		LDU 8
		LDU 8
		POP S7
		POP S3
		POP S4
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 323
	PUSH S2
	NOT
	SWAP
	GTINT 7
	AND
	PUSHCONT {
		.loc stdlib.sol, 324
		PUSH S3
		LDU 8
		POP S5
		NIP
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 326
	ROT
	EQINT 48
	SWAP
	EQINT 120
	AND
	.loc stdlib.sol, 328
	OVER
	PUSHCONT {
		.loc stdlib.sol, 329
		PUSH S3
		LDU 8
		NIP
		POP S4
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 330
	DUP
	PUSHCONT {
		.loc stdlib.sol, 331
		PUSH S3
		LDU 8
		LDU 8
		BLKDROP2 2, 1
		POP S4
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 333
	PUSHINT 0
	.loc stdlib.sol, 335
	PUSH S4
	SBITS
	RSHIFT 3
	.loc stdlib.sol, 337
	FALSE ; decl return flag
	ROLL 3
	PUSHCONT {
		.loc stdlib.sol, 338
		FALSE ; decl return flag
		PUSH S2
		PUSHCONT {
			.loc stdlib.sol, 339
			PUSH S6
			LDU 8
			POP S8
			.loc stdlib.sol, 340
			PUSH S4
			MULCONST 16
			POP S5
			.loc stdlib.sol, 341
			DUP
			GTINT 47
			OVER
			LESSINT 58
			AND
			PUSHCONT {
				.loc stdlib.sol, 342
				DUP
				ADDCONST -48
				PUSH S5
				ADD
				POP S5
				.loc stdlib.sol, 0
			}
			PUSHCONT {
				DUP
				GTINT 64
				OVER
				LESSINT 71
				AND
				PUSHCONT {
					.loc stdlib.sol, 344
					DUP
					ADDCONST -55
					PUSH S5
					ADD
					POP S5
					.loc stdlib.sol, 0
				}
				PUSHCONT {
					DUP
					GTINT 96
					OVER
					LESSINT 103
					AND
					PUSHCONT {
						.loc stdlib.sol, 346
						DUP
						ADDCONST -87
						PUSH S5
						ADD
						POP S5
						.loc stdlib.sol, 0
					}
					PUSHCONT {
						.loc stdlib.sol, 348
						BLKDROP 8
						NULL
						PUSHINT 4
						RETALT
						.loc stdlib.sol, 0
					}
					IFELSE
				}
				IFELSE
			}
			IFELSE
			DROP
			.loc stdlib.sol, 0
		}
		REPEATBRK
		DUP
		IFRET
		DROP
		.loc stdlib.sol, 0
	}
	PUSHCONT {
		.loc stdlib.sol, 352
		FALSE ; decl return flag
		PUSH S2
		PUSHCONT {
			.loc stdlib.sol, 353
			PUSH S6
			LDU 8
			POP S8
			.loc stdlib.sol, 354
			DUP
			LESSINT 48
			OVER
			GTINT 57
			OR
			PUSHCONT {
				BLKDROP 8
				NULL
				PUSHINT 4
				RETALT
			}
			IFJMP
			.loc stdlib.sol, 356
			PUSH S4
			MULCONST 10
			POP S5
			.loc stdlib.sol, 357
			ADDCONST -48
			PUSH S4
			ADD
			POP S4
			.loc stdlib.sol, 0
		}
		REPEATBRK
		DUP
		IFRET
		DROP
		.loc stdlib.sol, 0
	}
	IFELSE
	IFRET
	.loc stdlib.sol, 360
	DROP
	SWAP
	PUSHCONT {
		.loc stdlib.sol, 361
		NEGATE
		.loc stdlib.sol, 0
	}
	IF
	.loc stdlib.sol, 362
	BLKDROP2 2, 1
	.loc stdlib.sol, 0
}

.fragment compareLongStrings, {
	.loc stdlib.sol, 439
	SWAP
	CTOS
	.loc stdlib.sol, 440
	SWAP
	CTOS
	.loc stdlib.sol, 441
	FALSE ; decl return flag
	PUSHCONT {
		.loc stdlib.sol, 442
		BLKPUSH 2, 2
		SDLEXCMP
		.loc stdlib.sol, 443
		DUP
		PUSHCONT {
			.loc stdlib.sol, 444
			BLKDROP2 3, 1
			PUSHINT 4
			RETALT
			.loc stdlib.sol, 0
		}
		IFJMP
		.loc stdlib.sol, 446
		DROP
		PUSH S2
		SREFS
		.loc stdlib.sol, 447
		PUSH S2
		SREFS
		.loc stdlib.sol, 448
		DUP2
		GREATER
		PUSHCONT {
			BLKDROP 5
			PUSHINT 1
			PUSHINT 4
			RETALT
		}
		IFJMP
		.loc stdlib.sol, 450
		PUSH2 S0, S1
		GREATER
		PUSHCONT {
			BLKDROP 5
			PUSHINT -1
			PUSHINT 4
			RETALT
		}
		IFJMP
		.loc stdlib.sol, 452
		ADD
		PUSHCONT {
			BLKDROP 3
			PUSHINT 0
			PUSHINT 4
			RETALT
		}
		IFNOTJMP
		.loc stdlib.sol, 454
		PUSH S2
		LDREFRTOS
		NIP
		POP S3
		.loc stdlib.sol, 455
		OVER
		LDREFRTOS
		NIP
		POP S2
		.loc stdlib.sol, 0
	}
	AGAINBRK
	IFRET
	.loc stdlib.sol, 457
	DROP2
	PUSHINT 0
	.loc stdlib.sol, 0
}

.fragment __strchr, {
	.loc stdlib.sol, 471
	NULL
	.loc stdlib.sol, 472
	PUSHINT 0
	.loc stdlib.sol, 473
	ROLL 3
	CTOS
	NULL
	FALSE ; decl return flag
	PUSHCONT {
		PUSH S2
		SEMPTY
		NOT
	}
	PUSHCONT {
		PUSH S2
		LDUQ 8
		PUSHCONT {
			PLDREF
			CTOS
			LDU 8
		}
		IFNOT
		POP S4
		POP S2
		.loc stdlib.sol, 474
		PUSH2 S1, S5
		EQUAL
		PUSHCONT {
			.loc stdlib.sol, 475
			ROLL 3
			BLKDROP2 5, 1
			PUSHINT 4
			RETALT
			.loc stdlib.sol, 0
		}
		IFJMP
		.loc stdlib.sol, 477
		PUSH S3
		INC
		POP S4
		.loc stdlib.sol, 0
	}
	WHILEBRK
	IFRET
	BLKDROP 3
	NIP
	.loc stdlib.sol, 0
}

.fragment __strrchr, {
	.loc stdlib.sol, 481
	NULL
	.loc stdlib.sol, 482
	PUSHINT 0
	.loc stdlib.sol, 483
	ROLL 3
	CTOS
	NULL
	PUSHCONT {
		OVER
		SEMPTY
		NOT
	}
	PUSHCONT {
		OVER
		LDUQ 8
		PUSHCONT {
			PLDREF
			CTOS
			LDU 8
		}
		IFNOT
		POP S3
		NIP
		.loc stdlib.sol, 484
		PUSH2 S0, S4
		EQUAL
		PUSHCONT {
			.loc stdlib.sol, 485
			PUSH S2
			POP S4
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 487
		PUSH S2
		INC
		POP S3
		.loc stdlib.sol, 0
	}
	WHILE
	BLKDROP 3
	NIP
	.loc stdlib.sol, 0
}

.fragment __toLowerCase, {
	.loc stdlib.sol, 551
	NEWC
	NULL
	PAIR
	.loc stdlib.sol, 552
	PUSHINT 0
	.loc stdlib.sol, 553
	ROT
	CTOS
	NULL
	PUSHCONT {
		OVER
		SEMPTY
		NOT
	}
	PUSHCONT {
		OVER
		LDUQ 8
		PUSHCONT {
			PLDREF
			CTOS
			LDU 8
		}
		IFNOT
		POP S3
		NIP
		.loc stdlib.sol, 554
		BLKPUSH 2, 0
		.loc stdlib.sol, 555
		GTINT 64
		OVER
		LESSINT 91
		AND
		PUSHCONT {
			.loc stdlib.sol, 556
			ADDCONST 32
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 558
		PUSH2 S4, S4
		FIRST
		XCHG S1, S2
		STU 8
		SETINDEX 0
		POP S4
		.loc stdlib.sol, 559
		PUSH S2
		INC
		POP S3
		.loc stdlib.sol, 560
		PUSH S2
		EQINT 127
		PUSHCONT {
			.loc stdlib.sol, 561
			NEWC
			.loc stdlib.sol, 562
			PUSH S4
			PAIR
			POP S4
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 0
	}
	WHILE
	BLKDROP 3
	.loc stdlib.sol, 565
	DUP
	FIRST
	.loc stdlib.sol, 566
	PUSHCONT {
		OVER
		SECOND
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc stdlib.sol, 567
		OVER
		SECOND
		DUP
		ISNULL
		THROWIF 63
		POP S2
		.loc stdlib.sol, 568
		OVER
		FIRST
		.loc stdlib.sol, 569
		STBREF
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 572
	ENDC
	NIP
	.loc stdlib.sol, 0
}

.fragment __toUpperCase, {
	.loc stdlib.sol, 576
	NEWC
	NULL
	PAIR
	.loc stdlib.sol, 577
	PUSHINT 0
	.loc stdlib.sol, 578
	ROT
	CTOS
	NULL
	PUSHCONT {
		OVER
		SEMPTY
		NOT
	}
	PUSHCONT {
		OVER
		LDUQ 8
		PUSHCONT {
			PLDREF
			CTOS
			LDU 8
		}
		IFNOT
		POP S3
		NIP
		.loc stdlib.sol, 579
		BLKPUSH 2, 0
		.loc stdlib.sol, 580
		GTINT 96
		OVER
		LESSINT 123
		AND
		PUSHCONT {
			.loc stdlib.sol, 581
			ADDCONST -32
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 583
		PUSH2 S4, S4
		FIRST
		XCHG S1, S2
		STU 8
		SETINDEX 0
		POP S4
		.loc stdlib.sol, 584
		PUSH S2
		INC
		POP S3
		.loc stdlib.sol, 585
		PUSH S2
		EQINT 127
		PUSHCONT {
			.loc stdlib.sol, 586
			NEWC
			.loc stdlib.sol, 587
			PUSH S4
			PAIR
			POP S4
			.loc stdlib.sol, 0
		}
		IF
		.loc stdlib.sol, 0
	}
	WHILE
	BLKDROP 3
	.loc stdlib.sol, 590
	DUP
	FIRST
	.loc stdlib.sol, 591
	PUSHCONT {
		OVER
		SECOND
		ISNULL
		NOT
	}
	PUSHCONT {
		.loc stdlib.sol, 592
		OVER
		SECOND
		DUP
		ISNULL
		THROWIF 63
		POP S2
		.loc stdlib.sol, 593
		OVER
		FIRST
		.loc stdlib.sol, 594
		STBREF
		.loc stdlib.sol, 0
	}
	WHILE
	.loc stdlib.sol, 597
	ENDC
	NIP
	.loc stdlib.sol, 0
}

.fragment stateInitHash, {
	.loc stdlib.sol, 601
	NEWC
	.loc stdlib.sol, 603
	STSLICECONST x020134
	.loc stdlib.sol, 615
	ROT
	STUR 16
	.loc stdlib.sol, 616
	STU 16
	.loc stdlib.sol, 618
	ROT
	STUR 256
	.loc stdlib.sol, 619
	STU 256
	.loc stdlib.sol, 620
	ENDC
	CTOS
	SHA256U
	.loc stdlib.sol, 0
}

.fragment __forwardFee, {
	.loc stdlib.sol, 624
	DEPTH
	ADDCONST -3
	PICK
	CTOS
	.loc stdlib.sol, 625
	DUP
	LDU 1
	POP S2
	.loc stdlib.sol, 626
	PUSHCONT {
		.loc stdlib.sol, 637
		DROP
		PUSHINT 0
		.loc stdlib.sol, 0
	}
	PUSHCONT {
		.loc stdlib.sol, 631
		LDU 3
		LDMSGADDR
		LDMSGADDR
		LDVARUINT16
		LDDICT
		LDVARUINT16
		BLKDROP2 6, 1
		.loc stdlib.sol, 635
		LDVARUINT16
		DROP
		.loc stdlib.sol, 0
	}
	IFELSE
	.loc stdlib.sol, 0
}

.fragment __importFee, {
	.loc stdlib.sol, 642
	DEPTH
	ADDCONST -3
	PICK
	CTOS
	.loc stdlib.sol, 643
	DUP
	LDU 2
	POP S2
	.loc stdlib.sol, 644
	EQINT 2
	PUSHCONT {
		.loc stdlib.sol, 647
		LDMSGADDR
		LDMSGADDR
		BLKDROP2 2, 1
		.loc stdlib.sol, 648
		LDVARUINT16
		DROP
		.loc stdlib.sol, 0
	}
	PUSHCONT {
		.loc stdlib.sol, 650
		DROP
		PUSHINT 0
		.loc stdlib.sol, 0
	}
	IFELSE
	.loc stdlib.sol, 0
}

